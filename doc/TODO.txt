TODO:
-----

* Logging mechanism (Mark Ryan) 26/04/2012

  media-service-upnp is badly in need of a logging mechanism that
  can be switched on and off.


* Remove request bottleneck  (Mark Ryan) 26/04/2012

 All requests from all clients are placed in a queue upon reception
 and their execution is serialized.  This was done initially to keep
 things simple and easy to debug but it introduces an unnecessary
 bottleneck which could become apparent when there are multiple
 clients.  This is unfortunate as the whole raison d'etre for
 media-service-upnp is to efficiently support multiple control
 points.

 For example let's suppose client 1 sends a request to server 1 and
 client 2 sends a request to server 2.  Under the current
 implementation client 2's request is not sent to server 2 until
 client 1's request has completed.  This delay is unnecessary as
 client 2's request can be sent before client 1's has completed,
 without causing any problems.  How best to resolve this situation has
 yet to be determined.  We could have a separate queue for each server
 or simply no queues at all as servers should be able to handle
 multiple simultaneous requests from the same control point.  Perhaps
 both configurations might be possible.  The former may prove to be
 useful in debugging.

* Generate signals when server contents change (Mark Ryan) 26/04/2012

 Media-service-upnp needs to be modified to generate signals when
 the contents managed by DMSs on the local area network change.  Two
 signals need to be added to the com.intel.UPnP.MediaDevice interface.
 
 - A generic signal indicating that the contents of the server has
   changed.  This signal gives no indication as to what may have
   changed.
 - A more specific signal that indiciates that the contents of one
   or more folders maintained by the server have changed.  This
   signal should contain an array of ids of the servers that have
   changed.

 These signals correspond directly to the UPnP evented variables,
 SystemUpdateID and ContainerUpdateIDs.
 
 The UPnP variable ContainerUpdateIDs is optional.  Therefore,
 media-service-upnp will not be able to provide folder specific
 update information for servers that do not support this variable.
 An extra property needs to be added to the com.intel.UPnP.MediaDevice
 interface to indicate whether or not the server supports
 folder specific updates.

 We will not support the MediaServer2Spec
 org.gnome.UPnP.MediaContainer2.Updated notification.

* Add some basic syslog entries (Mark Ryan) 05/06/2012

* Implement local searching (Mark Ryan) 26/04/2012

 media-service-upnp should detect when a server does not support
 searching.  In such cases it should implement the searching locally.
 Note that a server may support searching but not on the key that a
 client wishes to search on.  In this case local searching can also be
 used.  Media-service-upnp will need to define and document a fixed
 set of searching criteria that it supports.  This way clients will
 always know which searches can be performed.


* Implement local sorting (Mark Ryan) 26/04/2012

 media-service-upnp should detect when a server does not support
 sorting.  In such cases it should implement the sort locally.
 Note that a server may support sorting but not on the key that a
 client wishes to sort on.  In this case local sorting can also be
 used.  Media-service-upnp will need to define and document a fixed
 set of sorting criteria that it supports.  This way clients will
 always know which sorts can be performed.


* System Bus (Mark Ryan) 26/04/2012

 Is the session bus the right bus for us?


* Interface selection (Mark Ryan) 26/04/2012

 DMS tend to make their services available on multiple interfaces.  If
 a DMP and a DMS are running on the same device the DMP will have the
 option of communicating with the DMS over the loopback or the LAN.  
 Currently, media-service-upnp always returns URLs containing the loopback
 address to clients if they are trying to access servers running on the
 same physical device.  This is the correct behavior for DMPs but it
 is incorrect for DMCs.  If the DMC were to run on the same device as the
 DMS, the DMC would only receive loopback address based URLs from
 media-service-upnp.  It cannot pass those URLs to a renderer running
 on a different device.  Consequently, the DMC needs a way to tell
 media-service-upnp that it does not wish to receive loopback URLs.


* Support Uploading of contents to DMS (Mark Ryan) 26/04/2012

 A new interface is needed to allow clients to upload contents to DMSs.
 


